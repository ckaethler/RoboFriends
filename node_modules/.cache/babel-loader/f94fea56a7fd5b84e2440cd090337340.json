{"ast":null,"code":"import { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nconst initialStateSearch = {\n  searchField: \"\"\n}; // reducer is function\n// reducer gets state and action\n// if get action, act upon state\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst InitialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const onRequestRobots = (state = InitialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/catherinekaethler/Documents/RoboFriends/src/reducers.js"],"names":["CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","action","type","Object","assign","payload","InitialStateRobots","isPending","robots","error","onRequestRobots"],"mappings":"AAAA,SACEA,kBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,aALP;AAOA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,WAAW,EAAE;AADY,CAA3B,C,CAIA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACH,kBAAP,EAA2BI,MAAM,GAAC,EAAlC,KAAyC;AACjE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,kBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM;AASP,MAAMM,kBAAkB,GAAG;AACvBC,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,MAAM,EAAE,EAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAA3B;AAMA,OAAO,MAAMC,eAAe,GAAG,CAACV,KAAK,GAAGM,kBAAT,EAA6BL,MAAM,GAAG,EAAtC,KAA6C;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,sBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACF,SAAKZ,sBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BQ,QAAAA,MAAM,EAAEP,MAAM,CAACI,OADe;AAE9BE,QAAAA,SAAS,EAAE;AAFmB,OAAzB,CAAP;;AAIF,SAAKX,qBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BS,QAAAA,KAAK,EAAER,MAAM,CAACI,OADgB;AAE9BE,QAAAA,SAAS,EAAE;AAFmB,OAAzB,CAAP;;AAIF;AACE,aAAOP,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n};\n\n// reducer is function\n// reducer gets state and action\n// if get action, act upon state\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCHFIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n};\n\nconst InitialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: '',\n}\n\nexport const onRequestRobots = (state = InitialStateRobots, action = {}) => {\n         switch (action.type) {\n           case REQUEST_ROBOTS_PENDING:\n             return Object.assign({}, state, { isPending: true });\n           case REQUEST_ROBOTS_SUCCESS:\n             return Object.assign({}, state, {\n               robots: action.payload,\n               isPending: false,\n             });\n           case REQUEST_ROBOTS_FAILED:\n             return Object.assign({}, state, {\n               error: action.payload,\n               isPending: false,\n             });\n           default:\n             return state;\n         }\n       };"]},"metadata":{},"sourceType":"module"}