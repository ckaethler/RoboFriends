{"ast":null,"code":"import { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nconst initialState = {\n  searchField: ''\n}; // reducer is function\n// reducer gets state and action\n// if get action, act upon state\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst InitialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const requestRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/catherinekaethler/Documents/RoboFriends/src/reducers.js"],"names":["CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialState","searchField","searchRobots","state","initialStateSearch","action","type","Object","assign","payload","InitialStateRobots","isPending","robots","error","requestRobots"],"mappings":"AAAA,SACEA,kBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,aALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB,C,CAIA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACC,kBAAP,EAA2BC,MAAM,GAAC,EAAlC,KAAyC;AACjE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,kBAAL;AACI,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEI,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ;AACI,aAAON,KAAP;AAJR;AAMH,CAPM;AASP,MAAMO,kBAAkB,GAAG;AACvBC,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,MAAM,EAAE,EAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAA3B;AAMA,OAAO,MAAMC,aAAa,GAAG,CAACX,KAAK,GAACH,YAAP,EAAqBK,MAAM,GAAC,EAA5B,KAAmC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,sBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACJ,SAAKb,sBAAL;AACI,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACS,QAAAA,MAAM,EAAEP,MAAM,CAACI,OAAhB;AAAyBE,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ,SAAKZ,qBAAL;AACI,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEU,QAAAA,KAAK,EAAER,MAAM,CAACI,OAAhB;AAAyBE,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ;AACI,aAAOR,KAAP;AARR;AAUH,CAXM","sourcesContent":["import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialState = {\n    searchField: '',\n}\n\n// reducer is function\n// reducer gets state and action\n// if get action, act upon state\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCHFIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n};\n\nconst InitialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: '',\n}\n\nexport const requestRobots = (state=initialState, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, { isPending: true});\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, { error: action.payload, isPending: false })\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}